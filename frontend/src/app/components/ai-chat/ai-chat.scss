// Style the component's host element to be a flex container
:host {
  display: flex;
  flex-direction: column;
  flex-grow: 1; // Allows it to fill the space in app.component
  min-height: 0; // Prevents the flex item from overflowing its container
}
 
// Main container for the AI chat section
.chat-section-container {
  display: flex;
  flex-direction: column;
  height: 100%; // Make it fill the host element
}
 
// The container for the actual chat window (messages + input)
.chat-window {
  display: flex;
  flex-direction: column;
  flex-grow: 1; // This is crucial, it makes the window take all remaining space
  overflow: hidden; // Important: prevents double scrollbars
}
 
// The area where messages are displayed
.chat-messages {
  flex-grow: 1; // Makes the message area expand to fill the available space
  overflow-y: auto; // The key to making ONLY this area scrollable
  padding: 0 1rem;
}
 
// Container for each individual message to help with alignment
.message {
  max-width: 85%;
  padding: 0.75rem 1.25rem;
  border-radius: 20px;
  line-height: 1.4;
  margin-bottom: 1rem;
}
 
.user-message {
  background-color: #26a69a;
  color: white;
  align-self: flex-end; // Pushes user messages to the right
}
 
.ai-message {
  background-color: #f1f1f1;
  color: #333;
  align-self: flex-start; // Keeps AI messages on the left
}
 
// The area for the text input and send button
.chat-input-area {
  display: flex;
  gap: 0.75rem; // Adds space between the input and button
  padding: 1rem;
  border-top: 1px solid #e0e0e0;
  background-color: #ffffff;
  flex-shrink: 0; // Prevents the input area from shrinking
}
 
.chat-input-area input {
  flex-grow: 1;
  padding: 0.75rem;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 1rem;
}
 
.chat-input-area button {
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  border: none;
  background-color: #26a69a;
  color: white;
  cursor: pointer;
  font-weight: bold;
 
  &:hover {
    background-color: #00897b;
  }
}